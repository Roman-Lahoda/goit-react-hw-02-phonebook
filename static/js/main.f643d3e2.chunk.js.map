{"version":3,"sources":["component/ContactsForm/ContactsForm.js","component/Filter/Filter.js","component/ContactsList/ContactList.js","App.js","index.js"],"names":["initialState","name","number","filter","ContactsFrom","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","pattern","title","required","Component","Filter","ContactsList","list","onDelete","map","item","onClick","id","App","contacts","onAddContact","data","newContact","shortid","generate","find","contact","alert","onChangeFilter","onDeleteContact","contactId","prevState","normalizedFilter","toLowerCase","filteredContacts","includes","className","ContactsForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f643d3e2.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  filter: \"\",\r\n};\r\n\r\nclass ContactsFrom extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ ...initialState });\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsFrom;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactsList = ({ list, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {list.map((item) => {\r\n        return (\r\n          <li key={item.id}>\r\n            <span>\r\n              {item.name}: {item.number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDelete(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport ContactsForm from \"./component/ContactsForm\";\nimport Filter from \"./component/Filter\";\nimport ContactsList from \"./component/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onAddContact = (data) => {\n    const newContact = {\n      id: shortid.generate(),\n      ...data,\n    };\n\n    const sameContact = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    if (sameContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div className=\"phonebook\">\n        <h1>Phonebook</h1>\n        <ContactsForm onSubmit={this.onAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onChangeFilter} />\n        <ContactsList list={filteredContacts} onDelete={this.onDeleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}